{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggleReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","defaultChecked","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f712d6bf.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button className='btn'\r\n            style={{ backgroundColor: color }}\r\n            onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color: 'black',\r\n    text: 'Add'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggleReminder }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggleReminder(task.id)} >\r\n            <h3>\r\n                {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggleReminder }) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggleReminder={onToggleReminder} />\r\n            ))}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n\r\n\r\nconst AddTask = ({ onAddTask }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAddTask({ text, day, reminder })\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onsubmit}>\r\n            <div className='form-control'>\r\n                <label>Task </label>\r\n                <input type='text' placeholder='Add Task' value={text}\r\n                    onChange={e => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time </label>\r\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={e => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder </label>\r\n                <input type='checkbox'\r\n                    defaultChecked={reminder} value={reminder} onClick={e => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input className='btn btn-block' type='submit' value='Save Task' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Task 1',\n      day: 'May 10th at 2:30pm',\n      reminder: true\n    },\n    {\n      id: 2,\n      text: 'Task 2',\n      day: 'June 11th at 3:40pm',\n      reminder: true\n    },\n    {\n      id: 3,\n      text: 'Task 3',\n      day: 'July 12th at 4: 50pm',\n      reminder: false\n    }\n  ])\n\n  // delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  // toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  // add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAddTask={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggleReminder={toggleReminder} /> : 'No tasks to show.'}\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}